1、

package cn.mldn.demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
public class JavaAPIDemo {
	private static final File SAVE_FILE = new File("D:" + File.separator + "mldn.person") ;
	public static void main(String[] args) throws Exception {
		// saveObject(new Person("小喷嚏",78)) ;
		System.out.println(loadObject());
	}
	public static void saveObject(Object obj) throws Exception {
		ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(SAVE_FILE)) ;
		oos.writeObject(obj); // 序列化
		oos.close(); 
	}
	public static Object loadObject() throws Exception {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream(SAVE_FILE)) ;
		Object obj = ois.readObject() ; // 反序列化
		ois.close();
		return obj ;
	}
}
@SuppressWarnings("serial")
class Person implements Serializable {	// Person类可以被序列化 
	private String name ;
	private int age ;
	public Person(String name,int age) {
		this.name = name ;
		this.age = age ;
	}
	// setter、getter略
	@Override
	public String toString() {
		return "姓名：" + this.name + "、年龄：" + this.age ;
	}
}



2、
package cn.mldn.demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
public class JavaAPIDemo {
	private static final File SAVE_FILE = new File("D:" + File.separator + "mldn.person") ;
	public static void main(String[] args) throws Exception {
		//saveObject(new Person("小喷嚏",78)) ;
		System.out.println(loadObject());
	}
	public static void saveObject(Object obj) throws Exception {
		ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(SAVE_FILE)) ;
		oos.writeObject(obj); // 序列化
		oos.close(); 
	}
	public static Object loadObject() throws Exception {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream(SAVE_FILE)) ;
		Object obj = ois.readObject() ; // 反序列化
		ois.close();
		return obj ;
	}
}
@SuppressWarnings("serial")
class Person implements Serializable {	// Person类可以被序列化 
	private transient String name ;
	private int age ;
	public Person(String name,int age) {
		this.name = name ;
		this.age = age ;
	}
	// setter、getter略
	@Override
	public String toString() {
		return "姓名：" + this.name + "、年龄：" + this.age ;
	}
}

